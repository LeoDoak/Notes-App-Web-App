Team 11 - Note Sharing Web Application
[x] - team members, features covered
[x] - prototype sketches
[x] - user actions
[x] - system actions and reactions

Upload File
	- What is the process of selecting the "location" you want to upload it to, exactly? It says a drop down menu. Can I pick only one of these, or share to multiple places?
	- You may find it easiest to think of your uploaded files as one big bucket, and then the assigning of them to a group (sharing) as a second independent step. You may want to change who a file is shared with from multiple places in your app.

Create/join groups
	- I'm going to suggest that you make all groups Private to start with. Users can create a private group, and then invite people to it somehow.
	- Do you have a notion of group administration? I think it makes sense that the person who created the group can remove people from it, but you will need functionality to do that. 

View Files in Groups
	- So there's a filter here (which is fine), but it is based on some metadata. Where does the metadata come from? Are you going to force a person to add it when they upload the file (that would be fine), or are you somehow going to extract that data from the file (that would be cool).


Friends features
	- Where else do friends show up? Like, once we're friends, what can I do with this connection? Is it only showing up when you do invitation to a group?
	- Is there a benefit to having friends over just inviting collaborators by email? Do you think the benefit is worth the effort?



Okay, so here is what I am thinking. 80%-90% of your app is file management and sharing, which can be very tricky. The most unique part is the Classes Aspect and Grouping for organization. Let me very strongly suggest that you use an existing file storage solution, like Google Drive or OneDrive, and build a nice SMALL web app that helps organize one drive/google drive specifically around "Sharing Files for Classes" theme and making it easy to do so. Google Drive and OneDrive have programming APIs that you can use to do things like upload files, tag files, and share files. You can build a client over top of that. I strongly recommend this to you for two reasons:
	1. File management is tedious and a largely solved problem.
	2. Working with a file management API would be a VERY good experience for you as developers. There will still be plenty of work to do, and relying heavily on someone else's system is basically what all developers do.
	3. Once you tame the file management, you can focus on the class note part of it, and potentially make that part more interesting and nuanced.

Think about it.  